name: 🔍 Secret Scan

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    # Run daily at 2 AM UTC
    - cron: '0 2 * * *'

jobs:
  gitleaks:
    name: 🔐 Scan for secrets
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetch all history for all branches and tags
          
      - name: 🔍 Run Gitleaks
        uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITLEAKS_LICENSE: ${{ secrets.GITLEAKS_LICENSE }} # Only required for gitleaks-action@v2+
        with:
          config-path: .gitleaks.toml
          
      - name: 📋 Upload SARIF results
        if: always()
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: results.sarif
        continue-on-error: true
        
  additional-scans:
    name: 🔎 Additional security scans
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        
      - name: 🔍 Scan for hardcoded secrets
        run: |
          echo "🔍 Scanning for potential hardcoded secrets..."
          
          # Check for Xendit API keys
          if grep -r "xnd_" . --exclude-dir=.git --exclude-dir=node_modules | grep -v ".env.template" | grep -v ".env.example" | grep -v "xendit_config.js"; then
            echo "❌ Found potential Xendit API keys in code!"
            exit 1
          fi
          
          # Check for suspicious patterns
          if grep -r -i "api.*key.*=" . --include="*.js" --include="*.ts" --include="*.jsx" --include="*.tsx" | grep -v "process.env" | grep -v "getEnv" | grep -v "config" | head -5; then
            echo "⚠️  Found potential hardcoded API key patterns. Please review."
          fi
          
          # Check for .env files that shouldn't be committed
          if find . -name ".env" -not -path "./.git/*" | head -1; then
            echo "❌ Found .env file in repository! This should be gitignored."
            exit 1
          fi
          
          echo "✅ No obvious hardcoded secrets found"
          
  dependency-check:
    name: 🔒 Dependency vulnerability scan
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        
      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: 🔍 Install and audit dependencies
        run: |
          npm ci
          npm audit --audit-level=high
        continue-on-error: true