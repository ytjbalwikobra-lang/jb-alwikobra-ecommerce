module.exports = {
  root: true,
  parser: '@typescript-eslint/parser',
  parserOptions: {
    ecmaVersion: 2021,
    sourceType: 'module',
    ecmaFeatures: { jsx: true },
    project: ['./tsconfig.json'],
  },
  settings: {
    react: { version: 'detect' },
  },
  env: {
    browser: true,
    es2021: true,
    node: true,
  },
  plugins: ['@typescript-eslint', 'react', 'react-hooks'],
  extends: [
    'eslint:recommended',
    'plugin:@typescript-eslint/recommended',
    'plugin:react/recommended',
    'plugin:react-hooks/recommended',
    'plugin:@typescript-eslint/recommended-requiring-type-checking',
    'prettier',
  ],
  rules: {
    'react/react-in-jsx-scope': 'off',
    '@typescript-eslint/no-explicit-any': 'warn',
    '@typescript-eslint/require-await': 'off',
    '@typescript-eslint/no-misused-promises': ['error', { checksVoidReturn: false }],
    // Reduce noise from strict unsafe rules in UI mapping code; enforce via typing in changed files
    '@typescript-eslint/no-unsafe-assignment': 'off',
    '@typescript-eslint/no-unsafe-member-access': 'off',
    '@typescript-eslint/no-unsafe-call': 'off',
    '@typescript-eslint/no-unsafe-return': 'off',
    '@typescript-eslint/no-unsafe-argument': 'off',
    '@typescript-eslint/restrict-template-expressions': 'off',
    '@typescript-eslint/restrict-plus-operands': 'off',
    '@typescript-eslint/no-floating-promises': 'off', // Too many to fix right now
    '@typescript-eslint/no-unused-vars': ['warn', { argsIgnorePattern: '^_' }],
    '@typescript-eslint/no-unnecessary-type-assertion': 'warn',
    '@typescript-eslint/no-empty-function': 'off',
    'react/display-name': 'off',
    'prefer-const': 'off',
    'no-empty': 'off',
    '@typescript-eslint/no-inferrable-types': 'off',
    'no-useless-escape': 'off',
    'react/no-unescaped-entities': 'off',
    'react/prop-types': 'off',
    'no-console': 'off',
    'no-console': 'warn',
  },
  ignorePatterns: [
    'node_modules/',
    'build/',
    'dist/',
    'public/',
    'supabase/migrations/**',
    '**/*.test.tsx',
    '**/*.test.ts',
    '.eslintrc.cjs',
    'postcss.config.js',
    'tailwind.config.js',
  ],
};
